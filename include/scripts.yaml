light_slow_on:
  alias: "Slowly turn on light"
  fields:
    entity_id:
      description: 'Name(s) of entity to turn on'
      example: 'light.kitchen'
    brightness_pct:
      description: 'Target brightness in percentage'
      example: '20'
  sequence:
    - repeat:
        count: "{% set curr_bri = state_attr(entity_id, 'brightness') | int %}{% if curr_bri >= brightness_pct | int %}0{% else %}{{ (brightness_pct | int) - curr_bri }}{% endif %}"
        sequence:
          - service: light.turn_on
            data:
              entity_id: "{{ entity_id }}"
              brightness_pct: "{{ repeat.index }}"
          - delay:
              milliseconds: 50

ring:
  alias: 'Play ring'
  fields:
    duration:
      description: 'Duration in 1/10 seconds'
      example: '20'
  sequence:
    - service: mqtt.publish
      data:
        topic: "megad_mqtt_bridge/mega2/cmd"
        payload: "35:1;p{{ duration }};35:0"

open_main_door:
  sequence:
    - service: mqtt.publish
      data:
        topic: "megad_mqtt_bridge/mega2/cmd"
        payload: "38e8:4095;p10;38e8:0"

set_timer:
  alias: 'Set timer duration but no more than current duration'
  fields:
    entity_id:
      description: 'Name(s) of entity of timer'
      example: 'timer.bathroom_vent'
    duration:
      description: 'Duration in seconds'
      example: '30'
  sequence:
    - condition: not
      conditions:
        - condition: tmeplate
          value_template: "{{ is_state(entity_id, 'active') }}"
        - condition: template
          value_template: "{{ as_timestamp(state_attr(entity_id, 'finishes_at'))  - as_timestamp(now()) > duration }}"
    - service: timer.start
      data:
        duration: "{{ duration }}"
      target:
        entity_id: "{{ entity_id }}"
